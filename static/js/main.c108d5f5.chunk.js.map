{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/Filter/Filter.module.css","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","components/App/App.jsx","index.js","components/ContactList/ContactList.module.css"],"names":["module","exports","ContactEditor","state","name","number","handleChange","event","target","value","setState","replace","handleSubmit","preventDefault","props","onAddContact","reset","this","className","styles","form","onSubmit","label","input","type","onChange","button","Component","ContactList","items","onDeleteContact","length","map","id","li","key","onClick","Filter","onChangeFilter","filter","contacts","p","App","handleInputChange","addContact","contact","some","alert","contactToAdd","uuid","deleteContact","persistedContacts","localStorage","getItem","JSON","parse","prevProps","prevState","setItem","stringify","filteredContacts","toLowerCase","includes","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c108d5f5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"h1\":\"ContactForm_h1__5Sw34\",\"form\":\"ContactForm_form__32NW5\",\"label\":\"ContactForm_label__18JKX\",\"input\":\"ContactForm_input__3Qqwb\",\"button\":\"ContactForm_button__2tp9k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"p\":\"Filter_p__1KREI\"};","import React, { Component } from 'react';\r\nimport styles from './ContactForm.module.css';\r\n\r\nexport default class ContactEditor extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  handleChange = event => {\r\n    let { name, value } = event.target;\r\n\r\n    this.setState({\r\n      [name]: name === 'number' ? value.replace(/[^\\-\\d]/g, '') : value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n\r\n    this.props.onAddContact({ ...this.state });\r\n\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({\r\n      name: '',\r\n      number: '',\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <form className={styles.form} onSubmit={this.handleSubmit}>\r\n          <label className={styles.label}>\r\n            Name\r\n            <input\r\n              className={styles.input}\r\n              type=\"text\"\r\n              name=\"name\"\r\n              value={name}\r\n              onChange={this.handleChange}\r\n            />\r\n          </label>\r\n          <label className={styles.label}>\r\n            Number\r\n            <input\r\n              className={styles.input}\r\n              type=\"text\"\r\n              name=\"number\"\r\n              value={number}\r\n              onChange={this.handleChange}\r\n            />\r\n          </label>\r\n          <button className={styles.button} type=\"submit\">\r\n            Add contact\r\n          </button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport styles from './ContactList.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ContactList = ({ items, onDeleteContact }) => (\r\n  <div>\r\n    {items.length ? (\r\n      <ul>\r\n        {items.map(({ id, name, number }) => (\r\n          <li className={styles.li} key={id}>\r\n            {`${name}: ${number}`}\r\n            <button\r\n              className={styles.button}\r\n              onClick={() => onDeleteContact(id)}\r\n            >\r\n              Delete\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    ) : (\r\n      items\r\n    )}\r\n  </div>\r\n);\r\n\r\nContactList.propTypes = {\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n  items: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    }).isRequired,\r\n  ).isRequired,\r\n};\r\n\r\nexport default ContactList;\r\n","import React from 'react';\r\nimport styles from './Filter.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Filter = ({ onChangeFilter, filter, contacts }) => (\r\n  <div>\r\n    <p className={styles.p}>Find contacts by name</p>\r\n\r\n    {contacts.length >= 2 && (\r\n      <input\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        value={filter}\r\n        onChange={onChangeFilter}\r\n      />\r\n    )}\r\n  </div>\r\n);\r\n\r\nFilter.propTypes = {\r\n  onChangeFilter: PropTypes.func.isRequired,\r\n  filter: PropTypes.string.isRequired,\r\n  contacts: PropTypes.arrayOf(PropTypes.object),\r\n};\r\n\r\nexport default Filter;\r\n","import React, { Component } from 'react';\nimport ContactForm from '../ContactForm/ContactForm';\nimport ContactList from '../ContactList/ContactList';\nimport Filter from '../Filter/Filter';\nimport uuid from 'uuid/v4';\nimport PropTypes from 'prop-types';\n\nexport default class App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n\n  componentDidMount() {\n    const persistedContacts = localStorage.getItem('contacts');\n\n    if (persistedContacts) {\n      const contacts = JSON.parse(persistedContacts);\n\n      this.setState({ contacts });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.contacts !== this.state.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  }\n\n  handleInputChange = event => {\n    const { value } = event.target;\n\n    this.setState({\n      filter: value,\n    });\n  };\n\n  addContact = contact => {\n    const { name } = contact;\n    const { contacts } = this.state;\n\n    const matchedName = contacts.some(contacts => contacts.name === name);\n\n    if (matchedName) {\n      alert(`${name} is already in contacts.`);\n    } else {\n      const contactToAdd = {\n        id: uuid(),\n        ...contact,\n      };\n\n      this.setState(state => ({\n        contacts: [...state.contacts, contactToAdd],\n      }));\n    }\n  };\n\n  deleteContact = id => {\n    this.setState(state => ({\n      contacts: state.contacts.filter(contact => contact.id !== id),\n    }));\n  };\n\n  render() {\n    const { contacts, filter } = this.state;\n    const filteredContacts = contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase()),\n    );\n\n    return (\n      <div>\n        <h1>Phonebook</h1>\n        <ContactForm onAddContact={this.addContact} />\n\n        <h2>Contacts</h2>\n        <Filter\n          onChangeFilter={this.handleInputChange}\n          filter={filter}\n          contacts={contacts}\n        />\n        <ContactList\n          items={filteredContacts}\n          onDeleteContact={this.deleteContact}\n        />\n      </div>\n    );\n  }\n}\n\nApp.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n  ),\n  filter: PropTypes.string,\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ContactList_button__2kQxY\",\"li\":\"ContactList_li__8sX77\"};"],"sourceRoot":""}